name: Publish Snapshots

on:
  push:
    branches:
      - main

jobs:
  # Run Gradle Wrapper Validation to verify the wrapper's checksum
  gradle-validation:
    name: Gradle Wrapper
    runs-on: ubuntu-latest
    if: github.repository_owner == 'config4k'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # we don't know what commit the last tag was
          fetch-depth: 0

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

  publish-artifacts:
    name: Publish Artifacts
    runs-on: ubuntu-latest
    if: github.repository_owner == 'config4k'
    needs: gradle-validation
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # we don't know what commit the last tag was
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '8'
          check-latest: true
          cache: 'gradle'
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Publish Snapshots
        run: >-
          ./gradlew --no-daemon version publishToSonatype -x test
          -Psigning.gnupg.keyName=$GPG_KEY_ID
          -Psigning.gnupg.passphrase="$GPG_PASSPHRASE"
          -PsonatypeUsername="$OSSRH_USERNAME"
          -PsonatypePassword="$OSSRH_TOKEN"
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}

  publish-docs:
    name: Publish documentation
    runs-on: ubuntu-latest
    if: github.repository_owner == 'config4k'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # we don't know what commit the last tag was
          fetch-depth: 0

      # Use GitHub Actions' cache to shorten build times and decrease load on servers
      - uses: actions/cache@v3
        with:
          path: docs/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      # Specify the Jekyll source location as a parameter
      - uses: helaili/jekyll-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          jekyll_src: 'docs'
